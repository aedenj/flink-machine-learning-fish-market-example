version: '3.8'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge


services:
  zk1:
    image: zookeeper
    hostname: zk1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: server.1=zk1:2888:3888
    volumes:
      - ../data/zookeeper/zk1/data:/data
      - ../data/zookeeper/zk1/datalog:/datalog
    networks:
      - kafka-net

  broker-1:
    image: wurstmeister/kafka:latest
    hostname: "broker-1"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker-1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ../data/kafka/broker-1/data:/var/lib/kafka/data
    depends_on:
      - zk1
    networks:
      - kafka-net


  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    hostname: kafka-schema-registry
    container_name: "kafka-schema-registry"
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker-1:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: GET,POST,PUT,OPTIONS
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
    depends_on:
      - broker-1
    networks:
      - kafka-net

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.5
    hostname: kafka-schema-registry-ui
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081/
      PROXY: "true"
    depends_on:
      - kafka-schema-registry

  kafka-tools:
    image: confluentinc/cp-kafka:latest
    hostname: "kafka-tools"
    container_name: "kafka-tools"
    command: ["tail", "-f", "/dev/null"]
    depends_on:
      - broker-1
    networks:
      - kafka-net

  zoonavigator:
    image: elkozmon/zoonavigator:latest
    ports:
      - "9001:8000"
    environment:
      HTTP_PORT: 8000
      AUTO_CONNECT_CONNECTION_STRING: "zk1:2181"
    depends_on:
      - zk1
    restart: always
    networks:
      - kafka-net


  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zk1:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    depends_on:
      - broker-1
    networks:
      - kafka-net


  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://broker-1:19092
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081
      KAFKA_REST_DEBUG: "true"
    depends_on:
      - zk1
      - broker-1
      - kafka-schema-registry
    networks:
      - kafka-net


  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    ports:
      - "9002:9002"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
      PORT: 9002
    depends_on:
      - kafka-rest-proxy
    networks:
      - kafka-net
